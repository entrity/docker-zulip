services:
  database:
    image: "zulip/zulip-postgresql:14"
    restart: unless-stopped
    env_file:
      - ./secrets/postgres-secrets.env
    environment:
      POSTGRES_DB: "zulip"
      POSTGRES_USER: "zulip"
    volumes:
      - "postgresql-14:/var/lib/postgresql/data:rw"
    networks:
      default:
        ipv4_address: 172.18.0.101
  memcached:
    image: "memcached:alpine"
    restart: unless-stopped
    command:
      - "sh"
      - "-euc"
      - |
        echo 'mech_list: plain' > "$$SASL_CONF_PATH"
        echo "zulip@$$HOSTNAME:$$MEMCACHED_PASSWORD" > "$$MEMCACHED_SASL_PWDB"
        echo "zulip@localhost:$$MEMCACHED_PASSWORD" >> "$$MEMCACHED_SASL_PWDB"
        exec memcached -S
    env_file:
      - ./secrets/memcached-secrets.env
    environment:
      SASL_CONF_PATH: "/home/memcache/memcached.conf"
      MEMCACHED_SASL_PWDB: "/home/memcache/memcached-sasl-db"
  rabbitmq:
    image: "rabbitmq:4.0.7"
    restart: unless-stopped
    env_file:
      - ./secrets/rabbitmq-secrets.env
    environment:
      RABBITMQ_DEFAULT_USER: "zulip"
    volumes:
      - "rabbitmq:/var/lib/rabbitmq:rw"
  redis:
    image: "redis:alpine"
    restart: unless-stopped
    command:
      - "sh"
      - "-euc"
      - |
        echo "requirepass '$$REDIS_PASSWORD'" > /etc/redis.conf
        exec redis-server /etc/redis.conf
    env_file:
      - ./secrets/redis-secrets.env
    volumes:
      - "redis:/data:rw"
  zulip:
    image: "zulip/docker-zulip:11.0-0"
    restart: unless-stopped
    build:
      context: .
      args:
        ## Change these if you want to build zulip from a different repo/branch
        ZULIP_GIT_URL: https://github.com/zulip/zulip.git
        ZULIP_GIT_REF: "11.0"
        ## Set this up if you plan to use your own CA certificate bundle for building
        # CUSTOM_CA_CERTIFICATES:
    networks:
      default:
        ipv4_address: 172.18.0.100
    env_file:
      - ./secrets/memcached-secrets.env
      - ./secrets/postgres-secrets.env
      - ./secrets/rabbitmq-secrets.env
      - ./secrets/email-secrets.env
      - ./secrets/redis-secrets.env
      - ./secrets/zulip-secrets.env
    environment:
      ## See https://github.com/zulip/docker-zulip#configuration for
      ## details on this section and how to discover the many
      ## additional settings that are supported here.
      DB_HOST: "database"
      DB_HOST_PORT: "5432"
      DB_USER: "zulip"
      DISABLE_HTTPS: "True"
      SSL_CERTIFICATE_GENERATION: "self-signed"
      SETTING_MEMCACHED_LOCATION: "memcached:11211"
      SETTING_RABBITMQ_HOST: "rabbitmq"
      SETTING_REDIS_HOST: "redis"
      SETTING_EXTERNAL_HOST: "duckofdoom.com"
      SETTING_ZULIP_ADMINISTRATOR: "zulip@duckofdoom.com"
      SETTING_ALLOWED_HOSTS: '["duckofdoom.com", "zulip.duckofdoom.com", "internal.zulip.local", "famchat.markhamanderson.com", "famchat.duckofdoom.com"]'
      SETTING_CSRF_TRUSTED_ORIGINS: '["https://duckofdoom.com",  "https://zulip.duckofdoom.com", "https://internal.zulip.local", "https://famchat.markhamanderson.com", "https://famchat.duckofdoom.com"]'
      ## It seems that the email server needs to use ssl or tls and can't be used without it
      SETTING_EMAIL_USE_SSL: "False"
      SETTING_EMAIL_USE_TLS: "True"
      ## Uncomment to enable the incoming email gateway.  You will need to
      ## ensure that email to emaildomain.example.com is routed to this host
      ## (e.g. via MX record)
      # SETTING_EMAIL_GATEWAY_PATTERN: "%s@emaildomain.example.com"
      ZULIP_AUTH_BACKENDS: "EmailAuthBackend"
      ## Uncomment this when configuring the mobile push notifications service
      SETTING_ZULIP_SERVICE_PUSH_NOTIFICATIONS: "True"
      # SETTING_ZULIP_SERVICE_SUBMIT_USAGE_STATISTICS: "True"

      ## If you're using a reverse proxy, you'll want to provide the
      ## comma-separated set of IP addresses to trust here.
      LOADBALANCER_IPS: "209.141.40.67,172.18.0.1/24"

      ## By default, files uploaded by users and profile pictures are
      ## stored directly on the Zulip server. You can configure files
      ## to be stored in Amazon S3 or a compatible data store
      ## here. See docs at:
      ##
      ##   https://zulip.readthedocs.io/en/latest/production/upload-backends.html
      ##
      ## If you want to use the S3 backend, you must set
      ## SETTING_LOCAL_UPLOADS_DIR to None as well as configuring the
      ## other fields.
      # SETTING_LOCAL_UPLOADS_DIR: "None"
      # SETTING_S3_AUTH_UPLOADS_BUCKET: ""
      # SETTING_S3_AVATAR_BUCKET: ""
      # SETTING_S3_ENDPOINT_URL: "None"
      # SETTING_S3_REGION: "None"
    volumes:
      - "zulip:/data:rw"
      - ./app.b11e523f477cf1c7b609.css:/home/zulip/prod-static/webpack-bundles/app.b11e523f477cf1c7b609.css
      - ./app.b11e523f477cf1c7b609.css:/home/zulip/deployments/2025-07-02-20-18-16/prod-static/serve/webpack-bundles/app.b11e523f477cf1c7b609.css
      - ./app.b11e523f477cf1c7b609.css:/home/zulip/deployments/2025-07-02-20-18-16/prod-static/serve/webpack-bundles/3942.ec4a1268b548f19a6422.js.LICENSE.txt
    ulimits:
      nofile:
        soft: 1000000
        hard: 1048576
volumes:
  zulip:
  postgresql-14:
  rabbitmq:
  redis:
networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/24
